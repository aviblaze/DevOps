pipeline {
    agent any
    tools {
        terraform 'terraform'
    }
    environment {
        AWS_CREDS = credentials('awsCreds')
        AZ_SUB_TENANT_CREDS = credentials('azsubTenantCreds')
        AZ_CLIENT_SECRET_CREDS = credentials('azClientSecretCreds')
        DB_CREDS = credentials('postgresCreds')
    }
    stages {
        stage('Checkout') {
            steps {
                //git branch: 'main', url: 'https://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@github.com/aviblaze/DevOps/tree/main/MulticloudInfrastructureAutomation/SetupInfra'
                checkout([$class: 'GitSCM', 
                branches: [[name: '*/main']],
                extensions: [
                    [$class: 'SparseCheckoutPaths', 
                    sparseCheckoutPaths:[[$class:'SparseCheckoutPath', path:'MulticloudInfrastructureAutomation/SetupInfra']]]
                    ],
                userRemoteConfigs: [[url: 'https://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@github.com/aviblaze/DevOps.git']]])
                sh "ls -ltr"
            }
        }
        stage('Terraform init') {
            steps {

                sh '''
                    set +x
                    terraform init --var="aws_access_key=$AWS_CREDS_USR" --var="aws_secret_key=$AWS_CREDS_PSW" --var="azure_subscription_id=$AZ_SUB_TENANT_CREDS_USR" --var="azure_client_id=$AZ_CLIENT_SECRET_CREDS_USR"  --var="azure_client_secret=$AZ_CLIENT_SECRET_CREDS_PSW" --var="azure_tenant_id=$AZ_SUB_TENANT_CREDS_PSW" --var="postgresdb_password=$DB_CREDS_PSW" --var="postgresdb_user=$DB_CREDS_USR"  -backend-config="access_key=$AWS_CREDS_USR" -backend-config="secret_key=$AWS_CREDS_PSW" -backend-config="region=us-east-1" -backend-config="bucket=awsterraformbackendstatebucket" -backend-config="key=awsterraformbackendstatebucket"
                '''
            }
        }

        stage('Terraform validate') {
            steps {
                sh '''
                    set +x
                    terraform validate
                '''
            }
        }

        stage('Terraform plan') {
            steps {

                sh '''
                    set +x
                    terraform plan -var-file="resources_dev.tfvars" --var="aws_access_key=$AWS_CREDS_USR" --var="aws_secret_key=$AWS_CREDS_PSW" --var="azure_subscription_id=$AZ_SUB_TENANT_CREDS_USR" --var="azure_client_id=$AZ_CLIENT_SECRET_CREDS_USR"  --var="azure_client_secret=$AZ_CLIENT_SECRET_CREDS_PSW" --var="azure_tenant_id=$AZ_SUB_TENANT_CREDS_PSW" --var="postgresdb_password=$DB_CREDS_PSW" --var="postgresdb_user=$DB_CREDS_USR"
                '''
            }
        }

        stage('Terraform action') {
            steps {
                
                sh '''
                    set +x
                    terraform ${action} --auto-approve -var-file="resources_dev.tfvars" --var="aws_access_key=$AWS_CREDS_USR" --var="aws_secret_key=$AWS_CREDS_PSW" --var="azure_subscription_id=$AZ_SUB_TENANT_CREDS_USR" --var="azure_client_id=$AZ_CLIENT_SECRET_CREDS_USR"  --var="azure_client_secret=$AZ_CLIENT_SECRET_CREDS_PSW" --var="azure_tenant_id=$AZ_SUB_TENANT_CREDS_PSW" --var="postgresdb_password=$DB_CREDS_PSW" --var="postgresdb_user=$DB_CREDS_USR"
                '''
                
            }
        }
        
    }
}